# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cOo5WOLNVr5n3b9mzMOelRv6gHZCD-Di
"""

import csv

# read csv file
with open('/content/ted_talks.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    talks = {}
    for row in reader:
        talk_id = row['talk_id']
        related_talks = eval(row['related_talks'])
        talks[talk_id] = related_talks

# identify cycles in the graph
cycles = []
max_cycles = 100  # set maximum number of cycles to find
visited = set()
for talk_id in talks:
    stack = [(talk_id, [])]
    while stack:
        try:
            talk, path = stack.pop()
            if talk in visited:
                if talk_id in path:
                    cycle = path[path.index(talk_id):] + [talk_id]
                    cycles.append(cycle)
                    if len(cycles) == max_cycles:
                        break
            else:
                visited.add(talk)
                for related_talk in talks[talk]:
                    stack.append((related_talk['id'], path + [talk]))
        except KeyError:
            pass

    if len(cycles) == max_cycles:
        break

# print cycles
for i, cycle in enumerate(cycles):
    print(f'Cycle {i+1}:')
    for talk_id in cycle:
        print(f'\t{talk_id}')